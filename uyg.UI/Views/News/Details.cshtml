@model uyg.UI.Models.NewsDto

@{
    ViewData["Title"] = "News Details";
    Layout = "_LayoutAdmin";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-gray-800">News Details</h1>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                <i class="fas fa-edit"></i> Edit
            </a>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-8">
                    <h2 class="mb-3">@Model.Title</h2>
                    
                    <div class="mb-4">
                        <img src="@Model.ImageUrl" class="img-fluid rounded" alt="@Model.Title" />
                    </div>

                    <div class="mb-4">
                        @Html.Raw(Model.Content)
                    </div>

                    @if (Model.Tags.Any())
                    {
                        <div class="mb-4">
                            <h5>Tags:</h5>
                            <div>
                                @foreach (var tag in Model.Tags)
                                {
                                    <span class="badge badge-primary me-2">@tag</span>
                                }
                            </div>
                        </div>
                    }
                </div>

                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Article Information</h5>
                            <dl class="row">
                                <dt class="col-sm-4">Category</dt>
                                <dd class="col-sm-8">@Model.CategoryName</dd>

                                <dt class="col-sm-4">Author</dt>
                                <dd class="col-sm-8">@Model.AuthorName</dd>

                                <dt class="col-sm-4">Status</dt>
                                <dd class="col-sm-8">
                                    @if (Model.IsPublished)
                                    {
                                        <span class="badge badge-success">Published</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-warning">Draft</span>
                                    }
                                </dd>

                                <dt class="col-sm-4">Created</dt>
                                <dd class="col-sm-8">@Model.CreatedAt.ToString("MMM dd, yyyy")</dd>

                                @if (Model.UpdatedAt.HasValue)
                                {
                                    <dt class="col-sm-4">Updated</dt>
                                    <dd class="col-sm-8">@Model.UpdatedAt.Value.ToString("MMM dd, yyyy")</dd>
                                }

                                @if (Model.PublishedAt.HasValue)
                                {
                                    <dt class="col-sm-4">Published</dt>
                                    <dd class="col-sm-8">@Model.PublishedAt.Value.ToString("MMM dd, yyyy")</dd>
                                }

                                <dt class="col-sm-4">Views</dt>
                                <dd class="col-sm-8">@Model.ViewCount</dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    </script>
} 